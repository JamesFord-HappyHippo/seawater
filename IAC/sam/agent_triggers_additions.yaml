# Agent Triggers Lambda Functions
# Add these to the Resources section of lambda_with_auth.yaml

  # Agent Trigger Read Function
  agentTriggerReadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref TIMBucketName
        Key: agentTriggerRead_js.zip
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DB_HOST: !Ref timhost
          DB_USER: !Ref timuser
          DB_PASS: !Ref tim4pass
          DB_NAME: !Ref timname
          DB_PORT: !Ref timport
      Events:
        agentTriggerReadEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /tim/config/agent-triggers
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer

  # Agent Trigger Create Function
  agentTriggerCreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref TIMBucketName
        Key: agentTriggerCreate_js.zip
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DB_HOST: !Ref timhost
          DB_USER: !Ref timuser
          DB_PASS: !Ref tim4pass
          DB_NAME: !Ref timname
          DB_PORT: !Ref timport
      Events:
        agentTriggerCreateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /tim/config/agent-triggers
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer

  # Agent Trigger Update Function
  agentTriggerUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref TIMBucketName
        Key: agentTriggerUpdate_js.zip
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DB_HOST: !Ref timhost
          DB_USER: !Ref timuser
          DB_PASS: !Ref tim4pass
          DB_NAME: !Ref timname
          DB_PORT: !Ref timport
      Events:
        agentTriggerUpdateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /tim/config/agent-triggers
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer

  # Agent Trigger Delete Function
  agentTriggerDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref TIMBucketName
        Key: agentTriggerDelete_js.zip
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DB_HOST: !Ref timhost
          DB_USER: !Ref timuser
          DB_PASS: !Ref tim4pass
          DB_NAME: !Ref timname
          DB_PORT: !Ref timport
      Events:
        agentTriggerDeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /tim/config/agent-triggers
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer

  # Manual Trigger Check Function (for testing)
  triggerCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri:
        Bucket: !Ref TIMBucketName
        Key: triggerCheck_js.zip
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          DB_HOST: !Ref timhost
          DB_USER: !Ref timuser
          DB_PASS: !Ref tim4pass
          DB_NAME: !Ref timname
          DB_PORT: !Ref timport
      Events:
        triggerCheckEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /tim/config/agent-triggers/check
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
