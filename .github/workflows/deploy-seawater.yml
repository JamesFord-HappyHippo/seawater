name: Seawater Climate Risk Platform - Build and Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-2
  SAM_TEMPLATE: IAC/phase1-simple.yaml

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: npm ci

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Run frontend tests
      run: npm test

    - name: Build Lambda functions
      run: |
        cd src/backend
        npm run build
        ls -la dist/

    - name: Run backend tests (if any)
      run: |
        cd src/backend
        npm test
      continue-on-error: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lambda-functions
        path: src/backend/dist/
        retention-days: 30

  deploy-dev:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Build Lambda functions
      run: |
        cd src/backend
        npm run build

    - name: Setup Python for AWS SAM
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup AWS SAM CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: SAM build
      run: |
        sam build --template-file ${{ env.SAM_TEMPLATE }}

    - name: SAM deploy to development
      run: |
        sam deploy \
          --template-file ${{ env.SAM_TEMPLATE }} \
          --stack-name seawater-dev \
          --parameter-overrides \
            Environment=dev \
            AppName=Seawater \
            DatabasePassword=${{ secrets.DB_PASSWORD }} \
            MapBoxAccessToken=${{ secrets.MAPBOX_ACCESS_TOKEN }} \
          --capabilities CAPABILITY_IAM \
          --region ${{ env.AWS_REGION }} \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset

  deploy-prod:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Build Lambda functions
      run: |
        cd src/backend
        npm run build

    - name: Setup Python for AWS SAM
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Setup AWS SAM CLI
      uses: aws-actions/setup-sam@v2
      with:
        use-installer: true

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: ${{ env.AWS_REGION }}

    - name: SAM build
      run: |
        sam build --template-file ${{ env.SAM_TEMPLATE }}

    - name: SAM deploy to production
      run: |
        sam deploy \
          --template-file ${{ env.SAM_TEMPLATE }} \
          --stack-name seawater-prod \
          --parameter-overrides \
            Environment=prod \
            AppName=Seawater \
            DatabasePassword=${{ secrets.DB_PASSWORD_PROD }} \
            MapBoxAccessToken=${{ secrets.MAPBOX_ACCESS_TOKEN_PROD }} \
          --capabilities CAPABILITY_IAM \
          --region ${{ env.AWS_REGION }} \
          --no-confirm-changeset \
          --no-fail-on-empty-changeset

  security-scan:
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Install dependencies
      run: |
        npm ci
        cd src/backend
        npm ci

    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate
        cd src/backend
        npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run security scan with Snyk
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true