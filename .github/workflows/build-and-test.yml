name: Build and Test

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: npm ci

    - name: Install backend dependencies
      run: |
        cd src/backend
        npm ci

    - name: Lint frontend code
      run: npm run lint
      continue-on-error: true

    - name: Lint backend code
      run: |
        cd src/backend
        npm run lint
      continue-on-error: true

    - name: Build Lambda functions
      run: |
        cd src/backend
        npm run build

    - name: Verify bundled Lambda functions
      run: |
        cd src/backend/dist
        echo "Checking bundled Lambda functions:"
        for file in *.js; do
          echo "File: $file, Size: $(du -h "$file" | cut -f1)"
          # Verify the file has exports
          if grep -q "module.exports\|exports\." "$file"; then
            echo "✓ $file has proper exports"
          else
            echo "⚠ $file might be missing exports"
          fi
        done

    - name: Run frontend tests
      run: npm test
      continue-on-error: true

    - name: Run backend tests
      run: |
        cd src/backend
        npm test
      continue-on-error: true

    - name: Run E2E tests
      run: npm run e2e
      continue-on-error: true

    - name: Check bundle sizes
      run: |
        cd src/backend/dist
        echo "Lambda bundle sizes:"
        ls -lah *.js
        echo ""
        echo "Bundle size summary:"
        find . -name "*.js" -exec du -sh {} \; | sort -hr

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd src/backend && npm ci

    - name: Run ESLint
      run: |
        npm run lint
        cd src/backend && npm run lint
      continue-on-error: true

    - name: Check TypeScript compilation
      run: npx tsc --noEmit
      continue-on-error: true

    - name: Check for security vulnerabilities
      run: |
        npm audit --audit-level=moderate
        cd src/backend && npm audit --audit-level=moderate
      continue-on-error: true